{"version":3,"sources":["mango.svg","components/Header.js","components/Shared/Dropdown.js","pages/Graph.js","pages/Home.js","components/Shared/Controls.js","components/Bar/Bar.js","components/BarGraph/index.js","helper.js","pages/Sort.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","titleStyle","fontWeight","fontSize","style","display","alignItems","width","height","padding","boxShadow","marginBottom","to","marginRight","src","mango","alt","Dropdown","props","onChange","value","selected","options","map","element","index","key","Graph","pageType","sortType1","sortType2","Component","Home","React","Controls","state","selectedSort","paddingTop","paddingBottom","e","setState","target","this","onClick","handleSort","handleShuffle","startColor","r","g","b","endColor","getBarColor","totalElements","rHex","Number","toString","gHex","bHex","rgbToHex","Math","floor","Bar","widthValue","backgroundColor","highlight","BarGraph","className","array","isHighlighted","includes","length","sleep","ms","Promise","resolve","setTimeout","createArrayWithRange","max","i","push","sorts","bubble","callback","a","end","temp","quick","quickSort","left","right","pivot","partition","seperation","SortPage","comparingIndexes","selectedArraySize","bind","j","random","sortName","App","exact","name","path","component","Sort","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d44f79c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mango.b9f255f8.svg\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport mango from '../mango.svg'\n// import Controls from '../components/Shared/Controls'\n\nfunction Header() {\n  const navStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    height: '100x',\n    padding: '10px',\n    boxShadow: '0 4px 2px -2px gray',\n    marginBottom: '10px'\n  }\n  const logoStyle = {\n    height: '75px',\n    marginRight: '20px'\n  }\n  const titleStyle = {\n    fontWeight: 'bold',\n    fontSize: '1.5rem'\n  }\n  \n  return (\n    <nav style={navStyle}>\n      <Link to=\"/\"><img style={logoStyle} src={mango} alt=\"Logo\" /></Link>\n      <div style={titleStyle}>Mango</div>\n      {/* fix whitespacing later */}\n      &nbsp; \n      <div style = {titleStyle}><Link to=\"/sort\">Sorting Algo's</Link></div>\n      &nbsp;\n      <div style = {titleStyle}><Link to=\"/graph\">Graphing Algo's</Link> </div>\n      &nbsp;\n    </nav>\n  );\n}\nexport default Header;","import React from 'react';\n\nfunction Dropdown(props) {\n    return (\n        <select\n            onChange={props.onChange} \n            value={props.selected}>\n            {props.options.map((element, index) => {\n                return <option \n                    key={index} \n                    value={element}>{element}</option>\n            })}\n        </select>\n\n    );\n}\n\nexport default Dropdown;","import React, { Component } from 'react'\nimport Dropdown from '../components/Shared/Dropdown'\n\nclass Graph extends Component {\n    render() {\n        return (\n\n            <div> \n                <Dropdown pageType = \"Graphing Algo's\" sortType1 = \"BFS\" sortType2 = \"DFS\"/>\n            </div>\n\n        )\n    }\n}\n\nexport default Graph;","import React from 'react';\n// import Footer from '../components/Footer.js'\n// import Dropdown from '../components/Shared/Dropdown.js';\n// import Header from '../components/Header.js';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        HOME PAGE CONTENT HERE\n      </div>\n\n    );\n  }\n}\n\nexport default Home;","import React from 'react';\nimport Dropdown from './Dropdown.js';\n\nclass Controls extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSort: \"quickSort\"\n        };\n    }\n\n    render() {\n        return (\n            <div style={{\n                display: \"flex\",\n                paddingTop: 10,\n                paddingBottom: 10\n            }}>\n                <Dropdown\n                    onChange={(e) => this.setState({selectedSort: e.target.value})}\n                    selected={this.state.selectedSort}\n                    options={[\"bubbleSort\", \"quickSort\"]} />\n                \n                <button onClick={() => this.props.handleSort(this.state.selectedSort)}>Sort</button>\n                <button onClick={this.props.handleShuffle}>Shuffle!</button>\n            </div>\n        );\n    }\n}\n\nexport default Controls;","import React from 'react';\n\nconst startColor = {\n    r: 189,\n    g: 255,\n    b: 202\n}\n\nconst endColor = {\n    r: 255,\n    g: 142,\n    b: 36\n}\n\nfunction getBarColor(index, totalElements) {\n    const r = startColor.r + Math.floor(index * (endColor.r - startColor.r) / totalElements)\n    const g = startColor.g + Math.floor(index * (endColor.g - startColor.g) / totalElements)\n    const b = startColor.b + Math.floor(index * (endColor.b - startColor.b) / totalElements)\n\n    return '#' + rgbToHex(r, g, b);\n}\n\nfunction rgbToHex(r, g, b) {\n    const rHex = Number(r).toString(16);\n    const gHex = Number(g).toString(16);\n    const bHex = Number(b).toString(16);\n\n    return rHex + gHex + bHex;\n}\n\nfunction Bar(props) {\n    const widthValue = 100 / props.totalElements;\n    const heightValue = props.value * 100 / props.totalElements;\n    const style = {\n        height: heightValue + '%',\n        width: widthValue + '%',\n        backgroundColor: props.highlight ? \"red\" : getBarColor(props.value, props.totalElements),\n    }\n    return (\n        <div style={style} />\n    );\n\n}\nexport default Bar;\n","import React from 'react';\nimport Bar from '../Bar/Bar.js';\nimport './BarGraph.css';\n\nclass BarGraph extends React.Component {\n    render() {\n        return (\n            <div className=\"graph-container\">\n                {this.props.array.map((value, index) => {\n                    const isHighlighted = this.props.highlight.includes(value);\n                    return <Bar key={index}\n                        value={value} \n                        highlight={isHighlighted}\n                        totalElements={this.props.array.length} />\n                })}\n            </div>\n        );\n    }\n}\n\nexport default BarGraph;","const DEFAULT_SLEEP_MS = 10;\n\nconst sleep = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst createArrayWithRange = (max) => {\n    let array = []\n    for (let i = 1; i <= max; i++) {\n        array.push(i)\n    }\n    return array;\n}\n\nconst sorts = {\n    bubble: async (array, callback) => {\n        for (let end = array.length - 1; end > 0; end--) {\n            for (let i = 0; i < end; i++) {\n                if (array[i] > array[i + 1]) {\n                    let temp = array[i];\n                    array[i] = array[i + 1];\n                    array[i + 1] = temp;\n                    callback(array);\n                }\n                await sleep(DEFAULT_SLEEP_MS);\n            }\n        }\n    },\n    quick: async (array, callback) => {\n        const quickSort = async (array, left, right) => {\n            if (left >= right) return;\n    \n            // choose pivot\n            const pivot = array[right];\n            const seperation = await partition(array, left, right, pivot);\n    \n            await quickSort(array, left, seperation - 1);\n            await quickSort(array, seperation, right);\n        }\n\n        const partition = async (array, left, right, pivot) => {\n            while (left < right) {\n                // move left pointer until it should be moved (it is bigger than pivot)\n                while (array[left] < pivot) {\n                    left++;\n                }\n    \n                // move right pointer until it should be moved (it is smaller than pivot)\n                while (array[right] > pivot) {\n                    right--;\n                }\n    \n                // swap\n                const temp = array[left];\n                array[left] = array[right];\n                array[right] = temp;\n                // callback here\n                callback(array);\n                // that.setState({\n                //     array: array,\n                //     comparingIndexes: [array[left], array[right]]\n                // });\n                await sleep(DEFAULT_SLEEP_MS);\n            }\n    \n            // return the new seperation point\n            return right;\n        }\n        await quickSort(array, 0, array.length - 1);\n        callback(array);\n        // this.setState({comparingIndexes: []});\n    }\n}\n\nexport {\n    createArrayWithRange,\n    sorts\n};","import React, { Component } from 'react';\nimport Controls from '../components/Shared/Controls';\nimport BarGraph from '../components/BarGraph';\nimport { createArrayWithRange, sorts } from '../helper.js';\n\nclass SortPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            array: [],\n            comparingIndexes: [],\n            selectedArraySize: 100\n        }\n        // bindings\n        this.handleShuffle = this.handleShuffle.bind(this);\n    }\n    \n    componentDidMount() {\n        this.setState({\n            array: this.handleShuffle(createArrayWithRange(this.state.selectedArraySize))\n        });\n    }\n\n    handleShuffle(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n            this.setState({array : array});\n        }\n        return array;\n    }\n\n    handleSort(sortName) {\n        switch(sortName) {\n            case \"bubbleSort\":\n                sorts.bubble(this.state.array, (array) => this.setState({array: array}));\n                break;\n            case \"quickSort\":\n                sorts.quick(this.state.array, (array) => this.setState({array: array}));\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <section>\n                    <Controls \n                        handleSort = {this.handleSort.bind(this)}\n                        handleShuffle = {() => this.setState({array: this.handleShuffle(this.state.array)})} />\n                    <BarGraph\n                        highlight={this.state.comparingIndexes}\n                        array={this.state.array} />\n                </section>\n            </div>\n        )\n    }\n}\n\nexport default SortPage","import React from 'react';\nimport Header from './components/Header.js';\nimport Graph from './pages/Graph';\nimport Home from './pages/Home';\nimport Sort from './pages/Sort';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main style={{padding: 10}}>\n        {/* page routes */}\n        <Route exact name=\"sort\" path=\"/sort/\" component={Sort} />\n        <Route exact name=\"graph\" path=\"/graph/\" component={Graph} />\n        <Route exact name=\"home\" path=\"/\" component={Home} />\n      </main>\n    </Router>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}